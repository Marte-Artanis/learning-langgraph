from typing import Any, Dict
from langchain_core.documents import Document
from graph.chains.generation import generation_chain
from graph.state import GraphState


def generate(state: GraphState) -> Dict[str, Any]:
    """
    Generate answer from documents
    """
    print("---GENERATE---")
    question = state["question"]
    documents = state["documents"]

    # Converte documentos para string apenas no momento da geração
    context = "\n\n".join([doc.page_content for doc in documents])
    generation = generation_chain.invoke({"context": context, "question": question})
    # Returns a dictionary containing:
    # - "documents": the retrieved documents,
    # - "question": the original question,
    # - "generation": the answer generated by the AI based on the documents and the question.
    return {"documents": documents, "question": question, "generation": generation}
